---
const { intro } = Astro.props;
---

<div>
  <form id="subscribe-form" class="flex flex-col gap-2 min-w-full mx-0 my-auto">
    <div class="flex gap-2">
      <input
        type="email"
        name="email"
        placeholder="Enter your email"
        required
        class="h-9 px-3 py-1 text-sm shadow-sm border rounded-md focus:outline-none ring-0 grow bg-[var(--code-bg)] border-special-light"
      />
      <input
        type="hidden"
        name="domain"
        value="https://lumino.yolab.app"
      />
      <button
        type="submit"
        class="px-4 py-2 bg-[hsl(var(--theme-accent-base)/1)] text-[hsl(var(--theme-bg)/1)] rounded-md transition-colors text-sm font-medium shadow disabled:opacity-50 disabled:cursor-not-allowed min-w-[100px] flex items-center justify-center"
      >
        Subscribe
      </button>
    </div>
    <div id="message" class="text-sm"></div>
  </form>
</div>

<script>
  async function handleSubscribe(form) {
    const messageDiv = document.getElementById('message');
    const submitButton = form.querySelector('button[type="submit"]');
    const email = form.email.value;
    const domain = form.domain.value;
    
    // Disable button and show loading state
    submitButton.disabled = true;
    submitButton.innerHTML = `
      <svg class="animate-spin h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    `;
    
    try {
      const response = await fetch('https://substackapi.com/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Cache-Length': '0'
        },
        body: JSON.stringify({ email, domain }),
      });
      
      const data = await response.json();
      
      if (data.errors) {
        messageDiv.textContent = data.errors[0].msg;
        messageDiv.className = 'text-sm text-red-500';
      } else if (data.requires_confirmation) {
        messageDiv.textContent = 'Please check your email to confirm your subscription.';
        messageDiv.className = 'text-sm text-blue-500';
        form.reset();
      } else {
        messageDiv.textContent = 'Successfully subscribed!';
        messageDiv.className = 'text-sm text-green-500';
        form.reset();
      }
    } catch (error) {
      messageDiv.textContent = 'An error occurred. Please try again later.';
      messageDiv.className = 'text-sm text-red-500';
    } finally {
      // Re-enable button and restore original text
      submitButton.disabled = false;
      submitButton.innerHTML = 'Subscribe';
    }
  }

  const form = document.getElementById('subscribe-form');
  form?.addEventListener('submit', (e) => {
    e.preventDefault();
    handleSubscribe(e.target);
  });
</script>